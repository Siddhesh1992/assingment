{"version":3,"sources":["components/Home.js","context/Auth.js","components/Login.js","components/Transaction.js","components/SignUp.js","components/Header.js","components/Footer.js","reducer/Auth.reducer.js","components/App.js","index.js"],"names":["Home","history","useHistory","useState","tableData","setTableData","fromDate","toDate","errors","dateState","setDateState","fromDateRef","useRef","toDateRef","useEffect","handleDate","prev","current","value","M","Datepicker","init","format","autoClose","onClose","fetchData","url","axios","get","then","data","handleChange","event","target","name","className","onSubmit","preventDefault","id","type","ref","onChange","htmlFor","onClick","swal","to","colSpan","map","ev","customerName","amount","description","transId","_id","title","text","closeOnClickOutside","closeOnEsc","dangerMode","buttons","willDelete","method","e","replace","AuthContext","React","createContext","Login","useContext","dispatch","email","password","loginDetState","setLoginDetState","obj","count","Object","keys","forEach","trim","charAt","toUpperCase","slice","validate","post","response","payload","catch","error","message","status","param","msg","Transaction","useParams","updateTextFields","bodyArray","SignUp","Header","state","err","auth","Footer","style","padding","reducer","action","Error","App","useReducer","authReducer","Auth","Provider","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d4146976.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport M from 'materialize-css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n// const Home = ({ auth, signIn }) => {\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const [tableData, setTableData] = useState([]);\r\n  const [dateState, setDateState] = useState({\r\n    fromDate: '',\r\n    toDate: '',\r\n    errors: {\r\n      fromDate: '',\r\n      toDate: '',\r\n    },\r\n  });\r\n\r\n  const { fromDate, toDate, errors } = dateState;\r\n\r\n  const fromDateRef = useRef();\r\n  const toDateRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleDate = () => {\r\n      setDateState((prev) => {\r\n        return {\r\n          ...prev,\r\n          fromDate: fromDateRef.current.value,\r\n          toDate: toDateRef.current.value,\r\n        };\r\n      });\r\n    };\r\n    M.Datepicker.init(fromDateRef.current, {\r\n      format: 'dd-mm-yyyy',\r\n      autoClose: true,\r\n      onClose: handleDate,\r\n    });\r\n    M.Datepicker.init(toDateRef.current, {\r\n      format: 'dd-mm-yyyy',\r\n      autoClose: true,\r\n      onClose: handleDate,\r\n    });\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = (url = '/api/transaction') => {\r\n    axios.get(url).then(({ data }) => {\r\n      setTableData(data);\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let { value, name } = event.target;\r\n\r\n    setDateState({ ...dateState, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const deleteUser = (transId) => {\r\n    swal({\r\n      title: 'Alert',\r\n      text: 'Are you sure you want to delete this record',\r\n      closeOnClickOutside: false,\r\n      closeOnEsc: false,\r\n      dangerMode: true,\r\n      buttons: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        axios({\r\n          method: 'delete',\r\n          url: '/api/transaction',\r\n          data: { transId },\r\n        }).then((e) => {\r\n          fetchData();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className='container'>\r\n      <form onSubmit={handleSubmit} className='row'>\r\n        <div className='input-field col s4'>\r\n          <input\r\n            id='fromDate'\r\n            value={fromDate}\r\n            type='text'\r\n            className='validate'\r\n            ref={fromDateRef}\r\n            onChange={handleChange}\r\n          />\r\n          <label className='active' htmlFor='fromDate'>\r\n            From Date\r\n          </label>\r\n          <span className='error'>{errors.fromDate}</span>\r\n        </div>\r\n        <div className='input-field col s4'>\r\n          <input\r\n            id='toData'\r\n            type='text'\r\n            className='validate'\r\n            value={toDate}\r\n            ref={toDateRef}\r\n            onChange={handleChange}\r\n          />\r\n          <label className='active' htmlFor='toData'>\r\n            To Date\r\n          </label>\r\n          <span className='error'>{errors.toDate}</span>\r\n        </div>\r\n        <div className='input-field col s2'>\r\n          <button\r\n            className='indigo btn'\r\n            onClick={() => {\r\n              if (toDateRef.current.value && fromDateRef.current.value) {\r\n                fetchData(\r\n                  `/api/transaction?fromDate=${fromDateRef.current.value}&toDate=${toDateRef.current.value}`\r\n                );\r\n              } else swal('Invalid Date');\r\n            }}\r\n            type='button'\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className='input-field col s2'>\r\n          <Link to='/addTrans' className='indigo-text right'>\r\n            <i className='small material-icons'>add_circle</i>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n      <table className='centered'>\r\n        <thead>\r\n          <tr>\r\n            <th>Customer Name</th>\r\n            <th>Amount</th>\r\n            <th>Description</th>\r\n            <th>Type</th>\r\n            <th>Settings</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {tableData > 0 ? (\r\n            <tr>\r\n              <td colSpan='5'>No Data</td>\r\n            </tr>\r\n          ) : (\r\n            tableData.map((ev) => (\r\n              <tr key={ev._id}>\r\n                <td>{ev.customerName}</td>\r\n                <td>{ev.amount}</td>\r\n                <td>{ev.description}</td>\r\n                <td>{ev.type}</td>\r\n                <td>\r\n                  <Link to='#' onClick={() => deleteUser(ev._id)}>\r\n                    <i className='small indigo-text material-icons'>delete</i>\r\n                  </Link>\r\n                  <Link\r\n                    to='#'\r\n                    onClick={() => history.replace(`/addTrans/${ev._id}`)}\r\n                  >\r\n                    <i className='small indigo-text material-icons'>edit</i>\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst AuthContext = React.createContext(null);\r\n\r\nexport default AuthContext;\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport AuthContext from '../context/Auth';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  // eslint-disable-next-line\r\n  const [state, dispatch] = useContext(AuthContext);\r\n\r\n  const intialState = {\r\n    email: '',\r\n    password: '',\r\n    errors: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n  const [loginDetState, setLoginDetState] = useState(intialState);\r\n  const { email, password, errors } = loginDetState;\r\n\r\n  const validate = () => {\r\n    let count = 0;\r\n\r\n    Object.keys(loginDetState).forEach((e) => {\r\n      if (!loginDetState[e]) {\r\n        let name = e.replace(/([A-Z])/g, ' $1').trim();\r\n        name = name.charAt(0).toUpperCase() + name.slice(1);\r\n        errors[e] = `${name} is required`;\r\n        ++count;\r\n      } else {\r\n        errors[e] = '';\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let obj = { ...loginDetState };\r\n\r\n    if (validate()) {\r\n      delete obj['errors'];\r\n\r\n      axios\r\n        .post(`api/auth/login`, loginDetState)\r\n        .then((response) => {\r\n          dispatch({ type: 'auth', payload: response.data });\r\n          history.replace('/home');\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n\r\n          const { data, message } = response.data;\r\n\r\n          swal('Alert', message);\r\n          if (response.status === 422) {\r\n            data.forEach((e) => {\r\n              errors[e.param] = e.msg;\r\n            });\r\n\r\n            setLoginDetState({ ...loginDetState });\r\n          } else {\r\n          }\r\n        });\r\n    }\r\n\r\n    setLoginDetState({ ...loginDetState });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let { value, name } = event.target;\r\n    errors[name] = '';\r\n\r\n    setLoginDetState({ ...loginDetState, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <main>\r\n        <div className='row'>\r\n          <div className='col s12 m4 offset-m4'>\r\n            <div className='card'>\r\n              <div className='card-content'>\r\n                <span className='card-title center-align indigo-text'>\r\n                  SIGN IN\r\n                </span>\r\n                <form onSubmit={handleSubmit} method='post'>\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='email'>Enter your email</label>\r\n                      <span className='error'>{errors.email}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='password'>Enter your password</label>\r\n                      <span className='error'>{errors.password}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <center>\r\n                    <div className='row'>\r\n                      <button\r\n                        type='submit'\r\n                        name='btn_login'\r\n                        className='col s12 btn btn-large waves-effect indigo'\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                    <Link className='indigo-text center-allign' to='/sign-up'>\r\n                      Create account\r\n                    </Link>\r\n                  </center>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { Link } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Transaction = () => {\r\n  const history = useHistory();\r\n  let { transId } = useParams();\r\n\r\n  const intialState = {\r\n    customerName: '',\r\n    amount: '',\r\n    description: '',\r\n    type: '',\r\n    errors: {\r\n      customerName: '',\r\n      amount: '',\r\n      description: '',\r\n      type: '',\r\n    },\r\n  };\r\n  const [loginDetState, setLoginDetState] = useState(intialState);\r\n  const { customerName, amount, description, type, errors } = loginDetState;\r\n\r\n  useEffect(() => {\r\n    if (transId) {\r\n      axios.get(`/api/transaction/${transId}`).then(({ data }) =>\r\n        setLoginDetState((prev) => {\r\n          return {\r\n            ...prev,\r\n            customerName: data.customerName,\r\n            amount: data.amount,\r\n            description: data.description,\r\n            type: data.type,\r\n          };\r\n        })\r\n      );\r\n    }\r\n  }, [transId]);\r\n\r\n  useEffect(() => {\r\n    M.updateTextFields();\r\n  });\r\n\r\n  const validate = () => {\r\n    let count = 0;\r\n\r\n    Object.keys(loginDetState).forEach((e) => {\r\n      if (!loginDetState[e]) {\r\n        let name = e.replace(/([A-Z])/g, ' $1').trim();\r\n        name = name.charAt(0).toUpperCase() + name.slice(1);\r\n        errors[e] = `${name} is required`;\r\n        ++count;\r\n      } else {\r\n        errors[e] = '';\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      swal('Validation Error');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let obj = { ...loginDetState };\r\n\r\n    if (validate()) {\r\n      delete obj['errors'];\r\n\r\n      let bodyArray = { ...loginDetState };\r\n      let method = 'post';\r\n\r\n      if (transId) {\r\n        method = 'put';\r\n        bodyArray['transId'] = transId;\r\n      }\r\n\r\n      axios({\r\n        method: method,\r\n        url: '/api/transaction',\r\n        data: bodyArray,\r\n      })\r\n        .then((response) => {\r\n          const { status, message } = response.data;\r\n          swal({\r\n            title: status,\r\n            text: message,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n          }).then((willDelete) => {\r\n            if (willDelete) {\r\n              history.replace('/home');\r\n            }\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n\r\n          const { data, message } = response.data;\r\n\r\n          swal('Alert', message);\r\n          if (response.status === 422) {\r\n            data.forEach((e) => {\r\n              errors[e.param] = e.msg;\r\n            });\r\n\r\n            setLoginDetState({ ...loginDetState });\r\n          } else {\r\n          }\r\n        });\r\n    }\r\n\r\n    setLoginDetState({ ...loginDetState });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let { value, name } = event.target;\r\n    errors[name] = '';\r\n\r\n    setLoginDetState({ ...loginDetState, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <main>\r\n        <div className='row'>\r\n          <div className='col s12 m4 offset-m4'>\r\n            <div className='card'>\r\n              <div className='card-content'>\r\n                <span className='card-title center-align indigo-text'>\r\n                  Enter Transaction\r\n                </span>\r\n                <form onSubmit={handleSubmit} method='post'>\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='text'\r\n                        name='customerName'\r\n                        id='customerName'\r\n                        value={customerName}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='customerName'>Enter your Name</label>\r\n                      <span className='error'>{errors.customerName}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='number'\r\n                        name='amount'\r\n                        id='amount'\r\n                        value={amount}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='amount'>Enter Amount</label>\r\n                      <span className='error'>{errors.amount}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <textarea\r\n                        className='validate materialize-textarea'\r\n                        type='text'\r\n                        name='description'\r\n                        id='description'\r\n                        value={description}\r\n                        onChange={handleChange}\r\n                      ></textarea>\r\n                      <label htmlFor='description'>Enter Description</label>\r\n                      <span className='error'>{errors.description}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <select\r\n                        className='browser-default'\r\n                        value={type}\r\n                        name='type'\r\n                        id='type'\r\n                        onChange={handleChange}\r\n                      >\r\n                        <option value=''>Choose your Card</option>\r\n                        <option value='debit'>Debit</option>\r\n                        <option value='credit'>Credit</option>\r\n                      </select>\r\n                      <span className='error'>{errors.type}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <center>\r\n                    <div className='row'>\r\n                      <button\r\n                        type='submit'\r\n                        name='btn_login'\r\n                        className='col s12 btn btn-large waves-effect indigo'\r\n                      >\r\n                        Create Transaction\r\n                      </button>\r\n                    </div>\r\n                    <Link className='indigo-text center-allign' to='/home'>\r\n                      Back\r\n                    </Link>\r\n                  </center>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { Fragment, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../context/Auth';\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  // eslint-disable-next-line\r\n  const [state, dispatch] = useContext(AuthContext);\r\n\r\n  const intialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    errors: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n  const [loginDetState, setLoginDetState] = useState(intialState);\r\n  const { name, email, password, errors } = loginDetState;\r\n\r\n  const validate = () => {\r\n    let count = 0;\r\n\r\n    Object.keys(loginDetState).forEach((e) => {\r\n      if (!loginDetState[e]) {\r\n        let name = e.replace(/([A-Z])/g, ' $1').trim();\r\n        name = name.charAt(0).toUpperCase() + name.slice(1);\r\n        errors[e] = `${name} is required`;\r\n        ++count;\r\n      } else {\r\n        errors[e] = '';\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      swal('Alert', 'Check for Errors');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let obj = { ...loginDetState };\r\n\r\n    if (validate()) {\r\n      delete obj['errors'];\r\n\r\n      axios\r\n        .post(`api/auth/signup`, loginDetState)\r\n        .then((response) => {\r\n          const { data, status, message } = response.data;\r\n          dispatch({ type: 'auth', payload: data });\r\n          if (response.status === 201) {\r\n            swal({\r\n              title: status,\r\n              text: message,\r\n              closeOnClickOutside: false,\r\n              closeOnEsc: false,\r\n            }).then((willDelete) => {\r\n              if (willDelete) {\r\n                history.replace('/home');\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          const { response } = error;\r\n\r\n          const { data, status, message } = response.data;\r\n\r\n          swal(status, message);\r\n          if (response.status === 422) {\r\n            data.forEach((e) => {\r\n              errors[e.param] = e.msg;\r\n            });\r\n\r\n            setLoginDetState({ ...loginDetState });\r\n          } else {\r\n          }\r\n        });\r\n    }\r\n\r\n    setLoginDetState({ ...loginDetState });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let { value, name } = event.target;\r\n    errors[name] = '';\r\n\r\n    setLoginDetState({ ...loginDetState, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <main>\r\n        <div className='row'>\r\n          <div className='col s12 m4 offset-m4'>\r\n            <div className='card'>\r\n              <div className='card-content'>\r\n                <span className='card-title center-align indigo-text'>\r\n                  SIGN UP\r\n                </span>\r\n                <form onSubmit={handleSubmit} method='post'>\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='text'\r\n                        name='name'\r\n                        id='name'\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='name'>Enter your name</label>\r\n                      <span className='error'>{errors.name}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='email'\r\n                        name='email'\r\n                        id='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='email'>Enter your email</label>\r\n                      <span className='error'>{errors.email}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='row'>\r\n                    <div className='input-field col s12'>\r\n                      <input\r\n                        className='validate'\r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor='password'>Enter your password</label>\r\n                      <span className='error'>{errors.password}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <br />\r\n                  <center>\r\n                    <div className='row'>\r\n                      <button\r\n                        type='submit'\r\n                        name='btn_login'\r\n                        className='col s12 btn btn-large waves-effect indigo'\r\n                      >\r\n                        Sign up\r\n                      </button>\r\n                    </div>\r\n                    <Link className='indigo-text center-allign' to='/'>\r\n                      Have Account Sign in\r\n                    </Link>\r\n                  </center>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../context/Auth';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  // eslint-disable-next-line\r\n  const [state, dispatch] = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('api/auth/isLoggedIn')\r\n      .then(({ data }) => {\r\n        if (data) {\r\n          dispatch({ type: 'auth', payload: data });\r\n          history.replace('/home');\r\n        }\r\n        // eslint-disable-next-line\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: 'auth', payload: null });\r\n      });\r\n  }, [dispatch, history]);\r\n\r\n  return (\r\n    <header>\r\n      <nav className='indigo'>\r\n        <div className='nav-wrapper container'>\r\n          <Link to='#' className='brand-logo'>\r\n            Assignment\r\n          </Link>\r\n          {state.auth ? (\r\n            <ul id='nav-mobile' className='right hide-on-med-and-down'>\r\n              <li>\r\n                <Link\r\n                  to='#'\r\n                  onClick={() => {\r\n                    axios.get('/api/auth/logout').then((e) => {\r\n                      dispatch({ type: 'auth', payload: null });\r\n                      history.replace('/');\r\n                    });\r\n                  }}\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='page-footer indigo' style={{ padding: '0' }}>\r\n      <div className='footer-copyright'>\r\n        <div className='container'>© 2014 Copyright Assignment</div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'auth':\r\n      return {\r\n        ...state,\r\n        auth: action.payload,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Login from '../components/Login';\r\nimport Transaction from '../components/Transaction';\r\nimport SignUp from '../components/SignUp';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport AuthContext from '../context/Auth';\r\nimport authReducer from '../reducer/Auth.reducer';\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(authReducer, { auth: null });\r\n\r\n  return (\r\n    <AuthContext.Provider value={[state, dispatch]}>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Login />\r\n          </Route>\r\n          <Route exact path='/sign-up'>\r\n            <SignUp />\r\n          </Route>\r\n          <Route path='/home'>\r\n            <Home />\r\n          </Route>\r\n          <Route path='/addTrans/:transId?'>\r\n            <Transaction />\r\n          </Route>\r\n          <Route component={() => <div>404</div>} />\r\n        </Switch>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}